import { defineComponent, computed, ref, openBlock, createElementBlock, normalizeClass, createElementVNode } from "vue";
import { optionProps } from "./type.mjs";
import "../../../theme-chalk/src/option.css";
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "option",
  props: optionProps,
  emits: ["value"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emits = __emit;
    const optionClass = computed(() => {
      return [
        `wd-option-${props.color}`,
        `wd-option-${props.size}`
      ];
    });
    const optionValueClass = computed(() => {
      return value.value === null ? "" : value.value ? [`wd-option-${props.size}-on`, `wd-option-${props.color}-on`] : [`wd-option-${props.size}-off`, `wd-option-${props.color}-off`];
    });
    const value = ref(null);
    function optionChange() {
      if (value.value === null) {
        value.value = true;
      } else {
        value.value = !value.value;
      }
      emits("value", value.value);
    }
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        class: normalizeClass(["wd-option", [optionClass.value, optionValueClass.value]]),
        onClick: optionChange
      }, _cache[0] || (_cache[0] = [
        createElementVNode("div", { class: "wd-option-stick" }, null, -1)
      ]), 2);
    };
  }
});
export {
  _sfc_main as default
};
